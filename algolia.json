[{"permalink":"/demo/hugo-create.html","title":"Hugo文档编辑！","content":"Markdown的编辑 新增md文件，开头要加上如下：\ntitle: \u0026#34;Hugo文档编辑！\u0026#34; description: \u0026#34;撰写文章\u0026#34; keywords: \u0026#34;Hugo,建站\u0026#34; date: 2022-09-27 lastmod: 2022-09-27 categories: - 示例 tags: - demo - 建站 expand: true extlink: comment: enable: true toc: true url: /demo/hugo-create.html weight: 1 配置说明 首先修改 frontmatter 其中title表示文章标题， date为生成文章当时的时间， tags为标签， categories为目录， toc enable为启用文章目录（需要自己在文章中生成）， description为文章摘要， draft表示是否为草稿（写完了文章把这里改为 false 即可），\n为 LoveIt 主题的摘要标识符，该标识符上方的内容为文章摘要，如果上方为空，则采用 frontmatter 中设置的descriptions为文章摘要。\n写完了文章进行网页的构建\nhugo serve -D -e production\n-D表示草稿也要渲染，-serve表示启动一个本地服务器，即时渲染，方便修改。 hugo serve 的默认运行环境是 development, 而 hugo 的默认运行环境是 production。 由于本地 development 环境的限制, 评论系统**, **CDN 和 fingerprint 不会在 development 环境下启用。 你可以使用 hugo serve -e production 命令来开启这些特性。 值得一提的是不论输入的是server还是serve都是一样的。\n在浏览器中前往它给出的 http://localhost:1313 就能看到你刚生成的博客了。\n当你运行 hugo serve 时, 当文件内容更改时, 页面会随着更改自动刷新.\n现在再输入指令\nhugo -D\n这会生成一个 public 目录, 其中包含你网站的所有静态内容和资源. 现在可以将其部署在任何 Web 服务器上。\n确认无误后就要把它发到公网上了，这里采用 GitHub pages 进行部署（当然，也有很多种方法也能达成这一目的）\n","date":"2022-09-27T00:00:00+00:00","updated":"2022-09-27T00:00:00+00:00"},{"permalink":"/use-hugo.html","title":"首次使用 Hugo NexT！","content":"这是一个使用 Hugo NexT 文档的站点！ 它是从 Hexo NexT\r主题中移植过来的，专门为 Hugo\r而打造的高品质优雅主题，保持原有简单易用的特性和强大的功能。\n路线图 Hugo NexT 主题的使用也是非常容易，只需参考配置文件注释内容，并遵循本手册说明，就可快速创建属于你自己的个人网站！\n使用反馈 加入 GitHub Discussions\r或 Gitter\r在线讨论 🍻 GitHub Issues\r提交错误报告 🐛 GitHub Feature\r表新功能的想法 ✨ 同时国内用户也可加入 QQ 群交流： 604710815\n","date":"2022-09-21T00:00:00+00:00","updated":"2022-09-27T00:00:00+00:00"},{"permalink":"/person.html","title":"zpcself","content":"现在是 =date(now)，距离第一次看 已经过去了===(date(today)-this.BeginDate).days==天。\n我新发布的\n","date":"0001-01-01T00:00:00+00:00","updated":"0001-01-01T00:00:00+00:00"},{"permalink":"/demo/markdown-syntax.html","title":"Markdown 语法支持","content":"仅以此篇文章来测试下在 NexT 主题中在通过 Hugo 引擎来建站时，是否支持 Markdown 文件内容中所写的各种语法，并展示下实际的效果。\n标题样式 让我们从所有可能的标题开始，在 HTML 中 \u0026lt;h1\u0026gt;-\u0026lt;h6\u0026gt;元素分别表示六个不同级别的标题样式，其中 \u0026lt;h1\u0026gt; 为最大标题，\u0026lt;h6\u0026gt;为最小标题，效果如下：\n标题 1 标题 2 标题 3 标题 4 标题 5 标题 6 段落格式 根据\rW3C 定义的\rHTML5 规范\r，HTML 文档由元素和文本组成。每个元素的组成都由一个\r开始标记\r表示，例如： \u0026lt;body\u0026gt; ，和\r结束标记\r表示，例如： \u0026lt;/body\u0026gt; 。（某些开始标记和结束标记在某些情况下可以省略，并由其他标记暗示。） 元素可以具有属性，这些属性控制元素的工作方式。例如：超链接是使用 a 元素及其 href 属性形成的。\nMarkdown 语法 1 ![图像说明](图像地址) HTML IMG 标签 1 \u0026lt;img src=\u0026#34;图像地址\u0026#34; width=\u0026#34;宽度\u0026#34; height=\u0026#34;高度\u0026#34; /\u0026gt; SVG 格式 1 \u0026lt;svg\u0026gt;xxxxxx\u0026lt;/svg\u0026gt; 列表类型 有序列表 第一个元素 第二个元素 第三个元素 无序列表 列表元素 另一个元素 和其它元素 嵌套列表 借助 HTML 的 ul 元素来实现。\n第一项 第二项 第二项第一个子项目 第二项第二个子项目 第二项第二分项第一分项 第二项第二分项第二分项 第二项第二分项第三分项 第二项第三个子项目 第二项第三分项第一分项 第二项第三分项第二分项 第二项第三分项第三分项 第三项 自定义列表 通过 HTML 的 dl 元素还支持自定义列表（表格列表）。\nHugo 目录结构 assets config.toml content data theme static Hugo 模板 基础模板 列表模板 单页模板 块引用 blockquote 元素表示从另一个源引用的内容，可以选择引用必须在 footer 或 cite 元素中，也可以选择使用注释和缩写等行内更改。\n引用文本 这一行也是同样的引用 同样你也在 blockquote 中使用 Markdown 语法书写\n带有引文的 Blockquote 元素效果。\n我的目标不是赚大钱,是为了制造好的电脑。当我意识到我可以永远当工程师时，我才创办了这家公司。\n— 史蒂夫·沃兹尼亚克 根据 Mozilla 的网站记录，Firefox 1.0 于 2004 年发布，并取得了巨大成功。\n表格 表格并不算是 Markdown 的核心要素，但 Hugo 同样支持它。\nID 创建者 模型 年份 1 Honda Accord 2009 2 Toyota Camry 2012 3 Hyundai Elantra 2010 可以使用 : （英文格式冒号）来对表格内容进行对齐。\n表格 可以是 很酷 左对齐 居中 右对齐 左对齐 居中 右对齐 左对齐 居中 右对齐 同样也可以在表格中使用 Markdown 语法。\n表格 中 使用 Markdown 语法 斜体 粗体 中划线 代码块 Code 1 2 3 4 5 6 7 8 9 10 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 1 2 3 4 5 6 7 8 9 10 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 其它元素： abbr、sub、sup、kbd等等 GIF 是位图图像格式。\nH2O\nC6H12O6\nXn + Yn = Zn\n按X获胜。或按CTRL+ALT+F显示 FPS 计数器。\n比特作为信息论中的信息单位，也被称为 shannon ，以信息论领域的创始人 Claude shannon 的名字命名。\n参考：\n来自 Mainroad 主题的 Basic Elements\r内容 ","date":"2022-09-27T11:52:18+08:00","updated":"2022-09-22T11:52:18+08:00"},{"permalink":"/demo/hello.html","title":"世界，你好！","content":" “使用 weight 关键字置顶文章。”\nHugo\r是现今世界上最快的网站建设框架，也是最流行的开源静态站点生成器之一。 凭借其惊人的速度和灵活性，Hugo 让建设网站再次变得有趣起来。\n快速开始 发表新文章 1 $ hugo new hello-world.md 更多信息：\r内容格式\r启动服务 1 $ hugo server 更多信息：\rHugo 服务命令行\r生成静态文件 1 $ hugo 更多信息：\rHugo 建站\r部署到服务器 $ hugo deploy 更多信息：\rHugo 发布\r祝你好运，相信你会喜欢上 Hugo 建站的旅程！\n","date":"2022-09-27T11:52:03+08:00","updated":"2022-09-20T16:43:23+08:00"},{"permalink":"/about.html","title":"关于 本站，及我","content":"本站： hugo发布的next主题的静态网站，个人使用过jekyll、hexo。最后发现了hugo这个宝藏！\nJekyll使用ruby编写，有github支持，可以将markdown文件直接放到git仓库，github会自动生成网页文件。（Github一直是一个亲ruby的社区） Hexo使用nodejs，提供了方便的部署命令，可以做到一条命令部署到github上。 Hugo使用go语言是一种编译型语言，速度非常快，官方文档写的非常好，部署简洁。前两者部署时需要安装很多依赖，而hugo可以直接提供二进制文件运行，甚至不需要root权限。 我： 一名Java程序员,爱研究，爱学习，爱探究新的技术！\n前三年：以前端的身份入职中软国际，未转正前转为测试，经理多个项目，从页面测试，黑盒测试，慢慢到后端及白盒测试 中三年：写了一年的testNG用例后，干脆还是做开发了，就这样又回到了开发岗位上，发现做技术，比打交道，要轻松的多了 后三年：正在进行中，学习新技术，学习架构中！ ","date":"2022-09-27T00:00:00+00:00","updated":"2022-09-27T00:00:00+00:00"},{"permalink":"/demo/table-of-content.html","title":"文章目录导航","content":"巴顿将军说过：“衡量一个人是否成功，不是看他站到顶峰，而是从顶峰跌落之后的反弹力”，褚时健的人生便是如此，中年发家致富，名利双收，之后又跌落到谷底，等到74岁再创业，10年后带着褚橙归来，东山再起收获亿万财富，他的发展轨迹就是反弹的过程。\n早年的故事 起始 2014年的春天，在云南省华宁县和宜良县的交界处，一座名叫矣则的小山村里，一处已经有上百年历史的古旧四合院宅子被拆掉。村委会正带领村民们进行“美丽乡村”的建设，一年以后，旧有村居将再也看不到，代之而起的是钢筋混凝土的新式民居。就像10年、20年前中国大小城市的改造一样，这个群山围绕的小村子也开始陷入“工地模式”。\n童年浪花 在江河边长大的孩子几乎都有一个当仁不让的特长：善水。褚时健也不例外，他不仅从小就在南盘江和花鱼塘里扑腾出了上佳的游泳技术，五六岁已经可以一个猛子扎出老远，而且从七八岁就可以在南盘江和河滩上的鱼塘里捉鱼了。\n少年故事 褚时健在乡村自由自在生活的十多年，其实正是中国社会风雨飘摇的十多年。特别是1937年卢沟桥事变后，日本人发动全面侵华战争，短短两三年间，中国的大部分国土相继沦陷\n激情的青春十年 当上了游击队员 1948年夏天，褚时健回乡，在禄丰车站小学做了一名老师，同时也和褚时仁、褚时杰一起继续保持与共产党组织的联系，做一些传递情报的工作\n战火纷飞 因为战斗力相较悬殊，所以游击队只能是靠打一枪换一个地方的办法，专找敌人薄弱的地方攻击，但更多时候，都是在防御和转移阵地。\n生活的断层 跌入生活底层 “反右”运动中被打倒的人在“右派”身份确定后，只有一条路可走：下放到农场。农场名副其实，就是干农活儿的地方，必须过和农民一样的生活。\n尾声 岁月像一条河 2015年，是褚时健和马静芬结婚60周年，被称为“钻石婚”的纪念年份。这简直是一份人生的奖赏,在中国离婚率愈益升高的当下，60年的婚姻，几乎就像一个前世之梦。一个甲子的相伴相随，褚时健和马静芬共同经历了国家和个人的各种风浪，共同面对过生死。他们两人已经不仅是夫妻，更是一对战友。尽管马静芬偶尔会对褚时健年轻时候的粗心抱怨上两句，但说到最后，她会说一句：“没有我就没有他，没有他也就没有我。”\n","date":"2022-09-25T21:12:52+08:00","updated":"2022-09-27T21:12:52+08:00"},{"permalink":"/demo/syntax-highlighting.html","title":"Hugo 内置的 Chroma 语法高亮","content":"Hugo 通过 Chroma 提供非常快速的语法高亮显示，现 Hugo 中使用 Chroma 作为代码块高亮支持，它内置在 Go 语言当中，速度是真的非常、非常快，而且最为重要的是它也兼容之前我们使用的 Pygments 方式。\n以下通过 Hugo 内置短代码 highlight 和 Markdown 代码块方式分别验证不同语言的代码块渲染效果并能正确高亮显示，有关优化语法突出显示的更多信息，请参阅 Hugo 文档\r。\n编程语言 GO 199 200 201 202 203 204 205 206 207 208 func GetTitleFunc(style string) func(s string) string { switch strings.ToLower(style) { case \u0026#34;go\u0026#34;: return strings.Title case \u0026#34;chicago\u0026#34;: return transform.NewTitleConverter(transform.ChicagoStyle) default: return transform.NewTitleConverter(transform.APStyle) } } Java 1 2 3 4 5 6 7 8 9 10 11 12 import javax.swing.JFrame; //Importing class JFrame import javax.swing.JLabel; //Importing class JLabel public class HelloWorld { public static void main(String[] args) { JFrame frame = new JFrame(); //Creating frame frame.setTitle(\u0026#34;Hi!\u0026#34;); //Setting title frame frame.add(new JLabel(\u0026#34;Hello, world!\u0026#34;));//Adding text to frame frame.pack(); //Setting size to smallest frame.setLocationRelativeTo(null); //Centering frame frame.setVisible(true); //Showing frame } } Python 1 print \u0026#34;Hello, world!\u0026#34; Git 对比 1 2 3 4 5 6 7 8 9 10 *** /path/to/original \u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; --- /path/to/new \u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line *** /path/to/original \u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; --- /path/to/new \u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line 文件 Make 文件 CC=gcc CFLAGS=-I. hellomake: hellomake.o hellofunc.o $(CC) -o hellomake hellomake.o hellofunc.o -I. Markdown 文档 1 2 3 **bold** *italics* [link](www.example.com) 数据内容 JSON 数据 1 2 3 {\u0026#34;employees\u0026#34;:[ {\u0026#34;firstName\u0026#34;:\u0026#34;John\u0026#34;, \u0026#34;lastName\u0026#34;:\u0026#34;Doe\u0026#34;}, ]} XML 内容 1 2 3 4 5 \u0026lt;employees\u0026gt; \u0026lt;employee\u0026gt; \u0026lt;firstName\u0026gt;John\u0026lt;/firstName\u0026gt; \u0026lt;lastName\u0026gt;Doe\u0026lt;/lastName\u0026gt; \u0026lt;/employee\u0026gt; \u0026lt;/employees\u0026gt; SQL 查询 1 2 3 4 SELECT column_name,column_name FROM Table WHERE column_name = \u0026#34;condition\u0026#34; 除以上列举的代码高亮显示外，还支持诸如：C 语言、C++、HTML、CSS、Shell脚本等各主流的代码语言高亮显示，可自行测试效果。\n","date":"2022-09-24T19:09:52+08:00","updated":"2022-09-27T19:09:52+08:00"},{"permalink":"/demo/shortcodes.html","title":"自定义短语示例","content":"虽然 Markdown 语法已经非常丰富能够满足我们写文章的绝大部分需求，但是为更好的对文章内容进行更友好的排版，为此设计了一套自定义的短语，便于在使用时能够快速引用。\n块引用 在引用一些经典名言名句时，可以采用此短语，语法参考如下：\n1 2 3 4 {{\u0026lt; quote \u0026gt;}} ### block quote 写下你想表达的话语！ {{\u0026lt; /quote \u0026gt;}} 实际效果：\n希望是无所谓有，无所谓无的，这正如地上的路。\n其实地上本没有路，走的人多了，也便成了路。\n鲁迅\n信息块 支持 default，info，success，warning，danger 等五种不同效果的展示，语法参考如下：\n1 2 3 4 {{\u0026lt; note [class] [no-icon] \u0026gt;}} 书写表达的信息 支持 Markdown 语法 {{\u0026lt; /note \u0026gt;}} 实际效果：\nDefault Header without icon Welcome to Hugo NexT!\rDefault Header Welcome to Hugo NexT!\rInfo Header Welcome to Hugo NexT!\rSuccess Header Welcome to Hugo NexT!\rWarning Header Welcome to Hugo NexT!\rDanger Header Welcome to Hugo NexT!\r","date":"2022-09-23T14:41:50+08:00","updated":"2022-09-27T14:41:50+08:00"},{"permalink":"/flinks.html","title":"站点示例","content":"如你也正在使用 Hugo NexT 主题，欢迎在 flinks.yaml\r文件底部提交贵站的名称，描述，头像，链接等信息，具体格式内容参考如下：\n1 2 3 4 - name: NexT 主题 desc: 保持简单的易用性和强大的功能。 # 支持HTML代码 avatar: https://hugo-next.eu.org/imgs/hugo_next_avatar.png link: https://hugo-next.eu.org 等待下一次部署成功后，便会在此页面中展示出贵站信息。\n","date":"0001-01-01T00:00:00+00:00","updated":"0001-01-01T00:00:00+00:00"}]